#https://education.yandex.ru/ege/task/c5c6b768-42bb-4590-8b90-2317266cc1f2
from jsonschema.exceptions import best_match

f = open("_2.txt")
strokes = [stroka.split() for stroka in f]
sts = []
ends = []
durs = []
#print(strokes)
l = 20000
for i in range(l+1):
    if i == 0: continue
    sts.append(int(strokes[i][0]))
    ends.append(int(strokes[i][1]))
    durs.append(int(ends[i-1]-sts[i-1]))
#Выбираем мероприятия которые заканчиваются раньше остальных

ends = sorted(ends)
time = ends[0]
k = 1
#Будем бегать пока не найдем окончание подходящее под нашу длительность:

"""
st_dur = {280: 10, 284: 12, 359: 47, 165: 10, 66: 1, 142: 47, 328: 1, 94: 10, 20: 2, 317: 8, 95: 31, 207: 65, 343: 12, 279: 7, 227: 9, 297: 29, 221: 37, 126: 32, 348: 2, 244: 24, 326: 69, 167: 4, 21: 7, 265: 34, 129: 12, 318: 7, 92: 92, 77: 7, 84: 4, 119: 28, 213: 8, 74: 9, 47: 6, 349: 70, 28: 18, 325: 22, 105: 2, 336: 34, 298: 2, 184: 6, 57: 19, 136: 19, 269: 9, 270: 14, 87: 14, 91: 37, 305: 9, 356: 23, 102: 4, 179: 4, 113: 3, 122: 7, 131: 33, 241: 27, 34: 12, 155: 47, 278: 10, 181: 3, 235: 3, 234: 26, 344: 6, 99: 12, 58: 43, 245: 24, 254: 5, 331: 13, 56: 26, 233: 50, 124: 10, 295: 14, 293: 24, 330: 25, 86: 19, 193: 25, 225: 32, 97: 1, 78: 10, 272: 1, 257: 2, 118: 15, 60: 5, 143: 2, 347: 31, 52: 9, 350: 48, 255: 22, 261: 9, 231: 6, 19: 12, 123: 14, 313: 11, 300: 1, 237: 5, 341: 7, 208: 83, 199: 26, 103: 72, 37: 7, 309: 34, 352: 3, 96: 23, 48: 5, 238: 11, 251: 4, 141: 91, 117: 7, 22: 3, 203: 8, 236: 17, 307: 24, 70: 25, 170: 18, 192: 107, 242: 39, 218: 13, 296: 22, 49: 3, 230: 23, 239: 24, 107: 21, 128: 66, 133: 1, 188: 14, 85: 3, 337: 3, 289: 9, 61: 1, 316: 9, 323: 75, 29: 49, 291: 19, 162: 22, 158: 26, 283: 35, 274: 27, 31: 9, 67: 8, 14: 10, 288: 17, 177: 2, 73: 5, 196: 60, 353: 6, 15: 31, 195: 3, 256: 13, 182: 6, 277: 28, 127: 9, 116: 12, 329: 15, 139: 63, 125: 17, 178: 14, 346: 15, 88: 42, 45: 31, 109: 1, 144: 9, 334: 6, 324: 2, 90: 5, 83: 26, 189: 16, 93: 5, 44: 5, 30: 9, 360: 13, 154: 7, 301: 5, 310: 20, 240: 31, 209: 36, 174: 8, 333: 43, 222: 17, 153: 29, 315: 2, 104: 17, 355: 8, 357: 3, 263: 3, 169: 22, 53: 10, 112: 5, 275: 16, 63: 4, 38: 32, 211: 5, 137: 5, 110: 38, 260: 2, 250: 7, 223: 12, 332: 4, 224: 4, 286: 25, 36: 5, 267: 29, 115: 10, 308: 2, 248: 19, 358: 2, 217: 4, 40: 10, 69: 29, 152: 30, 163: 1, 253: 5, 159: 11, 281: 24, 249: 4, 33: 7, 148: 1, 41: 9, 319: 28, 101: 4, 164: 31, 81: 36, 100: 35, 24: 20, 72: 39, 106: 11, 200: 40, 150: 3, 351: 3, 183: 13, 168: 23, 173: 18, 166: 11, 62: 29, 216: 40, 132: 1, 246: 4, 120: 13, 68: 43, 140: 2, 114: 13, 39: 11, 50: 21, 198: 17, 176: 26, 172: 52, 206: 23, 299: 7, 111: 18, 273: 22, 215: 3, 76: 21, 232: 10, 264: 19, 108: 11, 80: 7, 32: 72, 340: 4, 89: 3, 130: 25, 259: 46, 285: 3, 145: 8, 194: 61, 135: 86, 282: 10, 149: 45, 65: 4, 185: 6, 59: 21, 156: 65, 190: 12, 186: 27, 268: 23, 157: 28, 151: 3, 201: 21, 42: 1, 335: 5, 171: 4, 327: 29, 64: 7, 292: 13, 303: 48, 306: 12, 311: 6, 212: 101, 134: 42, 314: 33, 294: 5, 43: 22, 252: 8, 138: 15, 271: 67, 180: 2, 46: 58, 79: 7, 312: 53, 205: 29, 204: 9, 161: 9, 146: 6, 25: 11, 23: 2, 302: 13, 26: 3, 187: 19, 121: 8, 147: 29, 342: 9, 338: 27, 197: 38, 54: 1, 191: 34, 290: 4, 16: 6, 18: 2, 287: 59, 71: 53, 175: 128, 226: 64, 202: 37, 220: 16, 219: 28, 354: 21, 243: 4, 229: 1, 35: 16, 210: 10, 82: 7, 258: 16, 98: 15, 262: 12, 322: 4, 320: 50, 304: 28, 17: 21, 321: 37, 266: 4, 75: 6, 247: 8, 228: 9, 276: 2, 55: 70, 160: 10, 13: 73, 345: 16, 214: 12, 339: 21, 51: 21, 27: 67}
#for i in range(0, l):
#    min_dur = durs[i]
#    for j in range(i+1, l):
#        if sts[i] == sts[j] and min_dur > durs[j]:
#            min_dur = durs[j]
#    if not(sts[i]) in st_dur.keys() :
#        st_dur[sts[i]] = min_dur
dist = max(st_dur.keys())-min(st_dur.keys())
konf_time = {}
keys = st_dur.keys()
keys = sorted(keys)
for key in st_dur.keys():
    #flag = True
    print(key, "<-- KEY")
    time = key+st_dur[key]
    konf = 0
    for k_min in keys:
        if k_min == key: continue
        #Самые короткие конференции
        while time < k_min:
            time+=1
        time += st_dur[k_min]
        konf+=1
        if time > 360: break
        #Максимальная стыковка
        #while time in st_dur.keys():
        #    time += st_dur[time]
        #    konf += 1
        #    if key == 18:
        #        print(time)
        #if not (time in st_dur.keys()):
        #    #print(time)
        #    for i in range(0, dist):
        #        if time+i in st_dur.keys():
        #            time+=i
        #            print("BREAK")
        #            break
        #       flag = False
    konf_time[konf] = [time, key]
mx = max(konf_time.keys())
print(mx, 1440-konf_time[mx][0], konf_time[mx][1])

#1)
#2) 18 --> +
"""